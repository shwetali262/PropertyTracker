@model PropertyTracker.Models.ViewModels.RentalPaymentInfo

@{
    ViewBag.Title = "PayRent";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("PayRent", "Income"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Pay Rent</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PropertyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PropertyId", (SelectList)ViewBag.PropertyList, "Select Property", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PropertyId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.TenantId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TenantId", Enumerable.Empty<SelectListItem>(), "Select Tenant", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TenantId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.RentStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RentStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RentStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RentMonth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RentMonth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RentMonth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RentPaidAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RentPaidAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RentPaidAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BalanceAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BalanceAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BalanceAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "RentalList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    $(document).ready(function () {
        $('#PropertyId').click(function () {
            var propertyId = $(this).val();
            $.ajax({
                url: '@Url.Action("GetTenantsByPropertyId", "Income")',
                type: 'GET',
                data: { propertyId: propertyId },
                success: function (data) {
                    $('#TenantId').empty();
                    $.each(data, function (index, tenant) {
                        $('#TenantId').append($('<option></option>').val(tenant.Id).text(tenant.Name));
                    });
                }
            });
        });
    });
    </script>
}
